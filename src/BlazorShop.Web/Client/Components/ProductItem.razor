@inject ILocalStorageService LocalStorage

<div class="product-item">
    <div class="product-img" style="height: 300px">
        <a href="/products/@Product.Id/@Product.Name">
            <img src="@Product.ImageSource" alt="@Product.Name">
        </a>
        <div class="product-actions">
            <a @onclick="() => AddToWishlist(Product.Id)"
               @onclick:preventDefault
               href="#"
               class="product-add-to-wishlist"
               data-toggle="tooltip"
               data-placement="bottom"
               title="Add to wishlist">
                <i class="fa fa-heart"></i>
            </a>
        </div>
        <a href="/products/@Product.Id/@Product.Name"
           class="product-quickview">
            View
        </a>
    </div>
    <div class="product-details">
        <h3>
            <a class="product-title"
               href="/products/@Product.Id/@Product.Name">
                @Product.Name
            </a>
        </h3>
        <span class="price">
            @*<del>
                        TODO: Add out of stock
                        <span>$388.00</span>
                </del>*@
            <ins>
                <span class="ammount">$@Product.Price</span>
            </ins>
        </span>
    </div>
</div>

@code {
    [Parameter] public ProductListingResponseModel Product { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var token = await this.LocalStorage.GetItemAsync<string>("authToken");
        this.Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
    }

    private async Task AddToWishlist(int id)
    {
        await this.Http.PostAsJsonAsync($"api/wishlists/{id}", id);
    }
}
