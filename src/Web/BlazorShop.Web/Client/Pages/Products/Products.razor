@page "/products"

@if (this.categories == null || this.products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section class="section-wrap pt-70 pb-40 catalogue">
        <div class="container relative">
            <div class="row">
                <div class="col-md-9 catalogue-col right mb-50">

                    <div class="shop-filter">
                        <p class="result-count">Showing: 1-12 of @this.products.Count() results</p>
                        <AuthorizeView Roles="@GlobalConstants.AdminRoleName">
                            <a href="/products/add" class="btn btn-sm btn-color ecommerce-ordering">
                                <span>add product</span>
                            </a>
                        </AuthorizeView>
                    </div>

                    <div class="shop-catalogue grid-view left">

                        <div class="row row-10 items-grid">

                            @foreach (var product in this.products)
                            {
                                <ProductCard Product="product"/>
                            }

                        </div>
                    </div>

                    <div class="clear"></div>

                    <Pagination />

                </div>

                <CategoriesSidebar Categories="categories" />

            </div>
        </div>
    </section>
}

@code {
    private ProductsListingResponseModel[] products;
    private CategoriesListingResponseModel[] categories;

    protected override async Task OnInitializedAsync()
    {
        this.products = await this.Http.GetFromJsonAsync<ProductsListingResponseModel[]>("api/products");
        this.categories = await this.Http.GetFromJsonAsync<CategoriesListingResponseModel[]>("api/categories");
    }
}
