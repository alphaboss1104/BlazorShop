@page "/account/login"

<section class="page-title text-center">
    <div class="container relative clearfix">
        <div class="title-holder">
            <div class="title-text">
                <h1 class="uppercase">Login</h1>
            </div>
        </div>
    </div>
</section>

<section class="section-wrap login-register pt-0 pb-40">
    <div class="container">
        <div class="row">
            <div class="col-md-4"></div>
            
            <div class="col-md-4">
                <EditForm Model="model" OnValidSubmit="SubmitAsync" class="login">
                    @if (!isLoginSuccessful)
                    {
                        <div class="alert alert-danger fade in alert-dismissible" role="alert">
                            <button @onclick="ResetAsync" type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            Invalid username or password.
                        </div>
                    }

                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <p class="form-row form-row-wide">
                        <label>
                            username
                            <abbr class="required" title="Required">*</abbr>
                        </label>
                        <InputText class="form-control" placeholder="Username" type="text" @bind-Value="model.Username" />
                    </p>

                    <p class="form-row form-row-wide">
                        <label>
                            password
                            <abbr class="required" title="Required">*</abbr>
                        </label>
                        <InputText class="form-control" placeholder="Password" type="password" @bind-Value="model.Password" />
                    </p>

                    <button type="submit" class="btn"> Login </button>

                </EditForm>
            </div>
            
            <div class="col-md-4"></div>
        </div>
    </div>
</section>

@code {
    private readonly LoginRequestModel model = new LoginRequestModel();

    private bool isLoginSuccessful = true;

    private void ResetAsync()
    {
        isLoginSuccessful = !isLoginSuccessful;
    }

    private async Task SubmitAsync()
    {
        isLoginSuccessful = await this.AuthClient.LoginAsync(model);
        if (isLoginSuccessful)
        {
            this.NavigationManager.NavigateTo("/");
        }
    }
}
