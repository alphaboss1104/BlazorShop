@inject ILocalStorageService LocalStorage
@attribute [Authorize]

@if (cartProducts == null)
{
    <LoadingScreen />
}
else
{
    <li class="nav-item">
        <a href="/cart" class="nav-link">
            <i class="fa fa-shopping-cart"></i> My Cart
            <span class="badge badge-pill badge-danger">@cartProducts.Length</span>
        </a>
    </li>
}

@code {
    private ShoppingCartProductsResponseModel[] cartProducts;

    protected override async Task OnInitializedAsync()
    {
        var token = await this.LocalStorage.GetItemAsync<string>("authToken");
        this.Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        this.cartProducts = await this.Http.GetFromJsonAsync<ShoppingCartProductsResponseModel[]>("api/shoppingcarts");
    }
}
