@inject IToastService ToastService
@inject ILocalStorageService LocalStorage

<ul class="product-actions clearfix">

    <EditForm Model="model" OnValidSubmit="() => OnSubmitAsync(ProductId)">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <li>
            <button type="submit"
                    class="btn btn-color btn-lg add-to-cart left"
                    style="width: 192.19px; height: 50px; font-size: 15px; padding: 0 38px">
                <span>Add to Cart</span>
            </button>
        </li>
        <li>
            <div class="icon-add-to-wishlist left">
                <a href=""
                   @onclick="() => AddToWishlist(ProductId)"
                   @onclick:preventDefault>
                    <i class="fa fa-heart"></i>
                </a>
            </div>
        </li>
        <li>
            <div class="quantity buttons_added">
                <input @onclick="DecrementQuantity" type="button" value="-" class="minus" />
                <input @bind-value="model.Quantity" type="number" class="input-text qty text" />
                <input @onclick="IncrementQuantity" type="button" value="+" class="plus" />
            </div>
        </li>

    </EditForm>

</ul>

@code {
    private readonly ShoppingCartRequestModel model = new ShoppingCartRequestModel();

    [Parameter] public int ProductId { get; set; }
    [Parameter] public string ProductName { get; set; }
    [Parameter] public int ProductQuantity { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var token = await this.LocalStorage.GetItemAsync<string>("authToken");
        this.Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
    }

    private async Task OnSubmitAsync(int id)
    {
        await this.Http.PostAsJsonAsync($"api/shoppingcarts/{id}", model);
        this.NavigationManager.NavigateTo("/cart", forceLoad: true);
    }

    private async Task AddToWishlist(int id)
    {
        await this.Http.PostAsJsonAsync($"api/wishlists/{id}", id);
        this.ToastService.ShowSuccess($"Successfully added {this.ProductName} to your wishlist.", "Congratulations!");
    }

    private void IncrementQuantity()
    {
        if (this.model.Quantity < this.ProductQuantity)
        {
            this.model.Quantity++;
        }
    }

    private void DecrementQuantity()
    {
        if (this.model.Quantity > 1)
        {
            this.model.Quantity--;
        }
    }
}
