@page "/checkout"
@attribute [Authorize]

@if (cartProducts == null)
{
    <LoadingScreen />
}
else
{
    <section class="section-pagetop bg">
        <div class="container">
            <h2 class="title-page text-center">Checkout</h2>
        </div>
    </section>

    <section class="section-content padding-y bg">
        <div class="container">
            <div class="row">

                <aside class="col-md-6">
                    <div class="card mb-3">
                        <article class="card-body">
                            <header class="mb-4">
                                <h4 class="card-title">Review cart</h4>
                            </header>
                            <div class="row">

                                @foreach (var product in cartProducts)
                                {
                                    <div class="col-md-6">
                                        <figure class="itemside  mb-3">
                                            <div class="aside">
                                                <img src="@product.ImageSource" class="border img-xs" />
                                            </div>
                                            <figcaption class="info">
                                                <p> @product.Name </p>
                                                <span> @product.Quantity x $@product.Price = Total: $@(product.Price * product.Quantity) </span>
                                            </figcaption>
                                        </figure>
                                    </div>
                                }

                            </div>
                        </article>
                        <article class="card-body border-top">

                            <dl class="row">
                                <dt class="col-sm-10">Subtotal: <span class="float-right text-muted">@cartProducts.Count() items</span></dt>
                                <dd class="col-sm-2 text-right"><strong>$@totalPrice</strong></dd>

                                <dt class="col-sm-10">Discount: <span class="float-right text-muted">0%</span></dt>
                                <dd class="col-sm-2 text-danger text-right"><strong>$0</strong></dd>

                                <dt class="col-sm-10">Delivery charge: <span class="float-right text-muted">Standart Delivery</span></dt>
                                <dd class="col-sm-2 text-right"><strong>Free</strong></dd>

                                <dt class="col-sm-10">Tax: <span class="float-right text-muted">0%</span></dt>
                                <dd class="col-sm-2 text-right text-success"><strong>$0</strong></dd>

                                <dt class="col-sm-10">Total:</dt>
                                <dd class="col-sm-2 text-right"><strong class="h5 text-dark">$@totalPrice</strong></dd>
                            </dl>

                        </article>
                    </div>
                </aside>

                <aside class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-body">

                            <h4 class="card-title mb-4">Delivery info</h4>
                            <EditForm Model="address" OnValidSubmit="SubmitAsync">

                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="form-group">
                                    <label class="custom-control custom-radio custom-control-inline">
                                        <input class="custom-control-input" checked="" type="radio" name="gender" value="option1">
                                        <span class="custom-control-label"> Standard Delivery <br /> Free </span>
                                    </label>
                                </div>

                                <div class="form-row">
                                    <div class="col form-group">
                                        <label>Email</label>
                                        <InputText @bind-Value="email" type="email" class="form-control" disabled />
                                    </div>
                                    <div class="col form-group">
                                        <label>Phone</label>
                                        <InputText @bind-Value="address.PhoneNumber" type="tel" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label>Country</label>
                                        <InputSelect @bind-Value="address.Country" id="inputState" class="form-control">
                                            <option value="Uzbekistan">Uzbekistan</option>
                                            <option value="Russia">Russia</option>
                                            <option value="United States">United States</option>
                                            <option value="Bulgaria" selected="">Bulgaria</option>
                                            <option value="India">India</option>
                                            <option value="Afghanistan">Afghanistan</option>
                                        </InputSelect>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>State</label>
                                        <InputText @bind-Value="address.State" type="text" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="col form-group">
                                        <label>City</label>
                                        <InputText @bind-Value="address.City" type="text" class="form-control" />
                                    </div>
                                    <div class="col form-group">
                                        <label>Postcode</label>
                                        <InputText @bind-Value="address.PostalCode" type="text" class="form-control" />
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label>Address</label>
                                    <InputTextArea @bind-Value="address.Description" class="form-control" rows="2"></InputTextArea>
                                </div>

                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary btn-block"> Place order </button>
                                </div>

                            </EditForm>
                        </div>
                    </div>
                </aside>

            </div>
        </div>
    </section>
}

@code {
    private readonly AddressesRequestModel address = new AddressesRequestModel();
    private readonly OrdersRequestModel order = new OrdersRequestModel();

    private IEnumerable<ShoppingCartProductsResponseModel> cartProducts;

    private string email;
    private decimal totalPrice;

    protected override async Task OnInitializedAsync()
    {
        var state = await this.AuthState.GetAuthenticationStateAsync();
        var user = state.User;

        this.cartProducts = await this.ApiClient.GetJsonAsync<IEnumerable<ShoppingCartProductsResponseModel>>("api/shoppingcarts");

        this.email = user.GetEmail();
        this.totalPrice = this.cartProducts.Sum(p => p.Price * p.Quantity);
    }

    private async Task SubmitAsync()
    {
        var addressResponse = await this.ApiClient.PostJsonAsync("api/addresses", this.address);
        var addressId = await addressResponse.Content.ReadFromJsonAsync<int>();

        this.order.AddressId = addressId;

        var orderResponse = await this.ApiClient.PostJsonAsync("api/orders", this.order);
        var orderId = await orderResponse.Content.ReadAsStringAsync();

        this.NavigationManager.NavigateTo($"/order/confirmed/{orderId}", forceLoad: true);
    }
}
