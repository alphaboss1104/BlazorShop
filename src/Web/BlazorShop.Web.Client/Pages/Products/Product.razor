@page "/products/{Id:int}/{ProductName}"

@if (product == null)
{
    <LoadingScreen />
}
else
{
    <section class="section-wrap single-product">
        <div class="container relative">

            <div class="row">

                <div class="col-sm-6 col-xs-12 mb-60">

                    <div class="flickity flickity-slider-wrap mfp-hover" id="gallery-main">

                        <div class="gallery-cell">
                            <a href="#" class="lightbox-img">
                                <img src="@product.ImageSource" alt="@product.Name-img" />
                                <i class="fas fa-expand-alt"></i>
                            </a>
                        </div>

                    </div>

                </div>

                <div class="col-sm-6 col-xs-12 product-description-wrap">

                    @if (isAdded)
                    {
                        <Animate Animation="Animations.ZoomIn" Duration="TimeSpan.FromSeconds(0.5)">
                            <div class="alert alert-success fade in alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                                <strong>Success!</strong> Successfully added @product.Name to your <a href="/wishlist">wishlist</a>.
                            </div>
                        </Animate>
                    }

                    <h1 class="product-title">@product.Name</h1>
                    <span class="price">
                        <ins>
                            <span class="ammount">$@product.Price</span>
                        </ins>
                    </span>
                    <p class="product-description">@product.Description</p>

                    <div class="select-options">
                        <div class="row row-20">
                            <div class="col-sm-6">
                                <select class="color-select">
                                    <option selected>Select color</option>
                                    <option value="white">white</option>
                                    <option value="grey">grey</option>
                                    <option value="black">black</option>
                                    <option value="green">green</option>
                                    <option value="blue">blue</option>
                                </select>
                            </div>

                            <div class="col-sm-6">
                                <select class="size-options">
                                    <option selected>Select size</option>
                                    <option value="XS">XS</option>
                                    <option value="S">S</option>
                                    <option value="M">M</option>
                                    <option value="L">L</option>
                                    <option value="XL">XL</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <AddToCartForm ProductId="product.Id"
                                   ProductQuantity="product.Quantity"
                                   OnAddToWishlist="() => AddToWishlistHandler(product.Id)" />

                    <AuthorizeView Roles="@GlobalConstants.AdminRoleName">
                        <div class="product_meta">
                            <div class="icon-add-to-wishlist left">
                                <a href="/products/update/@product.Id">
                                    <i class="fa fa-pen"></i>
                                </a>
                            </div>
                            &nbsp;
                            <div class="icon-add-to-wishlist left">
                                <a href="">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </div>
                        </div>
                    </AuthorizeView>

                    <div class="product_meta">
                        <span class="sku">Quantity: @product.Quantity</span>
                        <span class="posted_in">
                            Category: <a href="/categories/@product.CategoryId">@product.CategoryName</a>
                        </span>
                    </div>

                    <div class="socials-share clearfix">
                        <div class="social-icons rounded">
                            <a href="#"><i class="fab fa-facebook-f"></i></a>
                            <a href="#"><i class="fab fa-instagram"></i></a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="tabs tabs-bb">
                        <ul class="nav nav-tabs">
                            <li class="active">
                                <a href="#tab-description" data-toggle="tab">Description</a>
                            </li>
                        </ul>

                        <div class="tab-content">

                            <div class="tab-pane fade in active" id="tab-description">
                                <p>@product.Description</p>
                            </div>

                        </div>

                    </div>
                </div>
            </div>

        </div>
    </section>
}

@code {
    private bool isAdded = false;
    private ProductsDetailsResponseModel product;

    [Parameter] public int Id { get; set; }
    [Parameter] public string ProductName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.product = await this.Http.GetFromJsonAsync<ProductsDetailsResponseModel>($"api/products/{this.Id}");
    }

    private async Task AddToWishlistHandler(int id)
    {
        var token = await this.TokenProvider.GetTokenAsync();

        if (token != null)
        {
            this.Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            await this.Http.PostAsJsonAsync($"api/wishlist/{id}", id);
            isAdded = true;
        }
        else
        {
            this.NavigationManager.NavigateTo("account/login");
        }
    }
}