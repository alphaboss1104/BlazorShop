@page "/wishlist"
@attribute [Authorize]

@if (products == null)
{
    <LoadingScreen />
}
else
{
    <section class="section-content padding-y bg">
        <div class="container">
            <article class="card">
                <header class="card-header"> My wishlist </header>
                <div class="card-body">

                    <div class="row">

                        @foreach (var product in products)
                        {
                            <div class="col-md-4">
                                <figure class="itemside mb-4">
                                    <div class="aside">
                                        <a href="products/@product.Id/@product.Name">
                                            <img src="@product.ImageSource" class="border img-md" />
                                        </a>
                                    </div>
                                    <figcaption class="info">
                                        <a href="products/@product.Id/@product.Name" class="title">@product.Name</a>
                                        <p class="price mb-2">$@product.Price</p>
                                        <a href="#"
                                           @onclick="() => OnSubmitAsync(product.Id)"
                                           @onclick:preventDefault
                                           class="btn btn-primary btn-sm">
                                            Add to cart
                                        </a>
                                        <a href="#"
                                           @onclick="() => OnRemoveAsync(product.Id)"
                                           @onclick:preventDefault
                                           class="btn btn-danger btn-sm"
                                           data-toggle="tooltip"
                                           title="Remove from wishlist">
                                            <i class="fa fa-times"></i>
                                        </a>
                                    </figcaption>
                                </figure>
                            </div>
                        }

                    </div>

                </div>
            </article>
        </div>
    </section>
}

@code {
    private readonly ShoppingCartRequestModel model = new ShoppingCartRequestModel();

    private ProductsListingResponseModel[] products;

    protected override async Task OnInitializedAsync()
    {
        var token = await this.LocalStorage.GetItemAsync<string>("authToken");
        this.Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        await this.LoadDataAsync();
    }

    private async Task OnSubmitAsync(int id)
    {
        this.model.Quantity = 1;

        await this.Http.PostAsJsonAsync($"api/shoppingcarts/{id}", this.model);
        this.NavigationManager.NavigateTo("/cart", forceLoad: true);
    }

    private async Task OnRemoveAsync(int productId)
    {
        await this.Http.DeleteAsync($"api/wishlists/{productId}");
        await this.LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        this.products = await this.Http.GetFromJsonAsync<ProductsListingResponseModel[]>("api/wishlists");
    }
}
