@page "/order/{Id}"
@attribute [Authorize]

@if (order == null)
{
    <LoadingScreen />
}
else
{
    <section class="section-pagetop bg">
        <div class="container text-center">
            <h1 class="title-page text-success">
                <i class="fas fa-check-circle"></i>
            </h1>
            <h1 class="title-page">
                Thank you!
            </h1>
            <h5 class="text-muted">
                You order was successfuly completed.
            </h5>

            <br />

            <a class="btn btn-outline-primary-light" href="/products"> Back to shop </a>
        </div>
    </section>
}

@code {
    private OrdersDetailsResponseModel order;

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var token = await this.LocalStorage.GetItemAsync<string>("authToken");
        this.Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        this.order = await this.Http.GetFromJsonAsync<OrdersDetailsResponseModel>($"api/orders/{this.Id}");
    }
}
