@page "/account/login"
@inject NavigationManager NavManager

<section class="section-conten padding-y" style="min-height:84vh">
    <div class="card mx-auto" style="max-width: 380px; margin-top:100px;">
        <div class="card-body">
            <h4 class="card-title mb-4">Sign in</h4>
            <EditForm Model="model" OnValidSubmit="Submit">

                @if (!isLoginSuccessful)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        Invalid username or password.
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                }

                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <InputText class="form-control" placeholder="Username" type="text" @bind-Value="model.Username" />
                </div>
                <div class="form-group">
                    <InputText class="form-control" placeholder="Password" type="password" @bind-Value="model.Password" />
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block"> Login </button>
                </div>
            </EditForm>
        </div>
    </div>

    <p class="text-center mt-4">Don't have account? <a href="/account/register">Sign up</a></p>
</section>

@code {
    private readonly LoginRequestModel model = new LoginRequestModel();
    private bool isLoginSuccessful = true;

    private async Task Submit()
    {
        isLoginSuccessful = await this.AuthClient.LoginAsync(model);
        if (isLoginSuccessful)
        {
            this.NavManager.NavigateTo("/");
        }
    }
}
